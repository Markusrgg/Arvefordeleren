@rendermode InteractiveServer


@inject TestatorService TestatorService
@inject HeirService HeirService

<h4 class="fw-bold">Friarv (75%)</h4>

<InheritanceDistributer Testator="testator" />

@if (!string.IsNullOrEmpty(secondTestator.FirstName))
{
    <InheritanceDistributer Testator="secondTestator" />
}

@code {
    List<Testator> testators = new List<Testator>();
    List<Heir> heirs = new List<Heir>();

    private Testator testator = new Testator();
    private Testator secondTestator = new Testator();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await Setup();
            StateHasChanged();
        }
    }

    private async Task Setup()
    {
        testators = await TestatorService.GetAll();
        heirs = await HeirService.GetAll();

        if (testators.Count > 0)
        {
            testator = testators[0];

            if (testators.Count > 1)
            {
                secondTestator = testators[1];
            }
        }

        if (testator != null)
        {
            if (secondTestator != null && testator.Persons.FirstOrDefault(x => x.Id == secondTestator.Id) == null && !string.IsNullOrEmpty(secondTestator.FirstName))
            {
                testator.Persons.Add(secondTestator.Clone());
            }
            foreach (Heir heir in heirs)
            {
                if (testator.Persons.FirstOrDefault(x => x.Id == heir.Id) == null)
                {
                    testator.Persons.Add(heir.Clone());
                }
            }

            if (secondTestator != null && !string.IsNullOrEmpty(secondTestator.FirstName))
            {
                if (secondTestator.Persons.FirstOrDefault(x => x.Id == testator.Id) == null)
                {
                    secondTestator.Persons.Add(testator.Clone());
                }
                foreach (Heir heir in heirs)
                {
                    if (secondTestator.Persons.FirstOrDefault(x => x.Id == heir.Id) == null)
                    {
                        secondTestator.Persons.Add(heir.Clone());
                    }
                }
            }
        }
    }
}
